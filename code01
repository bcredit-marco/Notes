//serializar connexionstring


public partial class CURAEntities : DbContext
    {
        public CURAEntities(string dummy)
            : base("name=CURAEntities")
        {
            string con = ConfigurationManager.AppSettings["CURA"].ToString();
            DES_Codec myCodec = new DES_Codec();
            Database.Connection.ConnectionString = myCodec.DecodeString(con);
        }
    }



1) First use MD5 or something else to encypt the connection string, and paste the result into the web.config <ConnectionString> tags.

2) Then in your programm of cs files, you should fetch the connstr by referring System.Configuration.ConfigurationManager.ConnectionStrings["Your Tag Name"].ConnectionString to get the encyptted string, and then decypt it.

3) In the end, you should pass this connectionString as a constructor parameter, something like this:

using (XXXEntities ent = new XXXEntites(Your decypted conn str here))

{

    //Do what you want....

}








  #region Constructors

    public <#=code.Escape(container)#>()
        : base(GetConnectionString(), ContainerName)
    {
        Initialize();
    }

	public static string GetConnectionString()
        {
            string SQLDB_SERVER = ConfigurationManager.AppSettings["SQLDB_SERVER"];
            string SQLDB_DATABASE = ConfigurationManager.AppSettings["SQLDB_DATABASE"];
            string SQLDB_USER = ConfigurationManager.AppSettings["SQLDB_USER"];
            string SQLDB_PASSWORD = ConfigurationManager.AppSettings["SQLDB_PASSWORD"];

            encryptador Encripta = new encryptador("");
                string strDesencriptado = string.Empty;
                Encripta.EncryptDecryptPublic(false, SQLDB_PASSWORD, ref strDesencriptado);

                string connString = new System.Data.EntityClient.EntityConnectionStringBuilder
                {
                    Metadata = "res://*",
                    Provider = "System.Data.SqlClient",
                    ProviderConnectionString = new System.Data.SqlClient.SqlConnectionStringBuilder
                    {
                        InitialCatalog = SQLDB_DATABASE,
                        DataSource = SQLDB_SERVER,
                        IntegratedSecurity = true,
                        MultipleActiveResultSets = true,
                        UserID = SQLDB_USER,                 // User ID such as "sa"
                        Password = strDesencriptado,               // hide the password
                    }.ConnectionString
                }.ConnectionString;
            return String.Format(connString);
        }



using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;
using Common;







  public BD_DIGITALIZACION_ENTITIES()
            : base(GetConnectionString(), ContainerName)
        {
            Initialize();
        }
    
    	public static string GetConnectionString()
            {
                string SQLDB_SERVER = ConfigurationManager.AppSettings["SQLDB_SERVER"];
                string SQLDB_DATABASE = ConfigurationManager.AppSettings["SQLDB_DATABASE"];
                string SQLDB_USER = ConfigurationManager.AppSettings["SQLDB_USER"];
                string SQLDB_PASSWORD = ConfigurationManager.AppSettings["SQLDB_PASSWORD"];
    
                encryptador Encripta = new encryptador("");
                    string strDesencriptado = string.Empty;
                    Encripta.EncryptDecryptPublic(false, SQLDB_PASSWORD, ref strDesencriptado);
    
                    string connString = new System.Data.EntityClient.EntityConnectionStringBuilder
                    {
                        Metadata = "res://*",
                        Provider = "System.Data.SqlClient",
                        ProviderConnectionString = new System.Data.SqlClient.SqlConnectionStringBuilder
                        {
                            InitialCatalog = SQLDB_DATABASE,
                            DataSource = SQLDB_SERVER,
                            IntegratedSecurity = false,
                            MultipleActiveResultSets = true,
                            UserID = SQLDB_USER,                 // User ID such as "sa"
                            Password = strDesencriptado,               // hide the password
                        }.ConnectionString
                    }.ConnectionString;
                return String.Format(connString);
            }
